<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.ontariotechu.sofe3980U.BinaryControllerTest" time="2.415" tests="21" errors="0" skipped="0" failures="15">
  <properties>
    <property name="java.specification.version" value="15"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\jean-\Documents\GitHub\ProjectDeliverable2\BinaryCalculatorWebapp\target\test-classes;C:\Users\jean-\Documents\GitHub\ProjectDeliverable2\BinaryCalculatorWebapp\target\classes;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.2.RELEASE\spring-boot-starter-test-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.2.RELEASE\spring-boot-starter-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.2.RELEASE\spring-boot-starter-logging-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\jean-\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\jean-\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;C:\Users\jean-\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;C:\Users\jean-\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\jean-\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\jean-\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-test\2.1.2.RELEASE\spring-boot-test-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.2.RELEASE\spring-boot-test-autoconfigure-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\jean-\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\jean-\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\jean-\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\jean-\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\jean-\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\jean-\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\jean-\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\jean-\.m2\repository\net\bytebuddy\byte-buddy\1.9.7\byte-buddy-1.9.7.jar;C:\Users\jean-\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.7\byte-buddy-agent-1.9.7.jar;C:\Users\jean-\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\jean-\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\jean-\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\jean-\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\jean-\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-core\5.1.4.RELEASE\spring-core-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-jcl\5.1.4.RELEASE\spring-jcl-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-test\5.1.4.RELEASE\spring-test-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\jean-\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\jean-\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.2.RELEASE\spring-boot-devtools-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot\2.1.2.RELEASE\spring-boot-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-context\5.1.4.RELEASE\spring-context-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.2.RELEASE\spring-boot-autoconfigure-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.2.RELEASE\spring-boot-starter-web-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.2.RELEASE\spring-boot-starter-json-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.2.RELEASE\spring-boot-starter-tomcat-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.14\tomcat-embed-core-9.0.14.jar;C:\Users\jean-\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.14\tomcat-embed-el-9.0.14.jar;C:\Users\jean-\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.14\tomcat-embed-websocket-9.0.14.jar;C:\Users\jean-\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.14.Final\hibernate-validator-6.0.14.Final.jar;C:\Users\jean-\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\jean-\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\jean-\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-web\5.1.4.RELEASE\spring-web-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-beans\5.1.4.RELEASE\spring-beans-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-webmvc\5.1.4.RELEASE\spring-webmvc-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-aop\5.1.4.RELEASE\spring-aop-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-expression\5.1.4.RELEASE\spring-expression-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.1.2.RELEASE\spring-boot-starter-thymeleaf-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\jean-\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\jean-\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\jean-\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\jean-\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.2.RELEASE\thymeleaf-extras-java8time-3.0.2.RELEASE.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Toronto"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="15"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CA"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-15.0.1\bin"/>
    <property name="sun.java.command" value="C:\Users\jean-\AppData\Local\Temp\surefire39333035361229001\surefirebooter6229824941489273027.jar C:\Users\jean-\AppData\Local\Temp\surefire39333035361229001 2023-02-19T19-28-36_424-jvmRun1 surefire10511380716407058409tmp surefire_09981979810262136240tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\jean-\Documents\GitHub\ProjectDeliverable2\BinaryCalculatorWebapp\target\test-classes;C:\Users\jean-\Documents\GitHub\ProjectDeliverable2\BinaryCalculatorWebapp\target\classes;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.2.RELEASE\spring-boot-starter-test-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.2.RELEASE\spring-boot-starter-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.2.RELEASE\spring-boot-starter-logging-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\jean-\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\jean-\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;C:\Users\jean-\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;C:\Users\jean-\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\jean-\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\jean-\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-test\2.1.2.RELEASE\spring-boot-test-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.2.RELEASE\spring-boot-test-autoconfigure-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\jean-\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\jean-\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\jean-\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\jean-\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\jean-\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\jean-\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\jean-\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\jean-\.m2\repository\net\bytebuddy\byte-buddy\1.9.7\byte-buddy-1.9.7.jar;C:\Users\jean-\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.7\byte-buddy-agent-1.9.7.jar;C:\Users\jean-\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\jean-\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\jean-\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\jean-\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\jean-\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-core\5.1.4.RELEASE\spring-core-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-jcl\5.1.4.RELEASE\spring-jcl-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-test\5.1.4.RELEASE\spring-test-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\jean-\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\jean-\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.2.RELEASE\spring-boot-devtools-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot\2.1.2.RELEASE\spring-boot-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-context\5.1.4.RELEASE\spring-context-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.2.RELEASE\spring-boot-autoconfigure-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.2.RELEASE\spring-boot-starter-web-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.2.RELEASE\spring-boot-starter-json-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;C:\Users\jean-\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.2.RELEASE\spring-boot-starter-tomcat-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.14\tomcat-embed-core-9.0.14.jar;C:\Users\jean-\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.14\tomcat-embed-el-9.0.14.jar;C:\Users\jean-\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.14\tomcat-embed-websocket-9.0.14.jar;C:\Users\jean-\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.14.Final\hibernate-validator-6.0.14.Final.jar;C:\Users\jean-\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\jean-\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\jean-\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-web\5.1.4.RELEASE\spring-web-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-beans\5.1.4.RELEASE\spring-beans-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-webmvc\5.1.4.RELEASE\spring-webmvc-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-aop\5.1.4.RELEASE\spring-aop-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\spring-expression\5.1.4.RELEASE\spring-expression-5.1.4.RELEASE.jar;C:\Users\jean-\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.1.2.RELEASE\spring-boot-starter-thymeleaf-2.1.2.RELEASE.jar;C:\Users\jean-\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\jean-\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\jean-\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\jean-\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\jean-\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.2.RELEASE\thymeleaf-extras-java8time-3.0.2.RELEASE.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\jean-"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2020-10-20"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-15.0.1"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\jean-\Documents\GitHub\ProjectDeliverable2\BinaryCalculatorWebapp"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\jean-\AppData\Local\Temp\surefire39333035361229001\surefirebooter6229824941489273027.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="15.0.1+9-18"/>
    <property name="user.name" value="jean-"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\jean-\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\jean-\AppData\Local\Temp\"/>
    <property name="java.version" value="15.0.1"/>
    <property name="user.dir" value="C:\Users\jean-\Documents\GitHub\ProjectDeliverable2\BinaryCalculatorWebapp"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-15.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Users\jean-\Matlab\bin;C:\Users\jean-\Matlab\bin\win64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Users\jean-\Python\Python390\Scripts\;C:\Users\jean-\Python\Python390\;C:\Program Files\AdoptOpenJDK\jdk-11.0.8.10-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Users\jean-\Matlab\runtime\win64;C:\Users\jean-\Xilinx\bin\nt;C:\Program Files\nodejs\;C:\Users\jean-\AppData\Local\Microsoft\WindowsApps;C:\Users\jean-\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.2.3\bin;C:\Users\jean-\AppData\Local\Programs\Microsoft VS Code\bin;C:\wamp64\bin\mysql\mysql5.7.31\bin;C:\Users\jean-\PyCharm 2020.3.2\bin;C:\Users\jean-\PyCharm Community Edition 2020.3.2\bin;C:\Users\jean-\AppData\Roaming\npm;C:\Users\jean-\AppData\Local\GitHubDesktop\bin;C:\Users\jean-\sqlite3\sqlite3;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\jean-\OneDrive\Desktop\apache-maven-3.8.7-bin\apache-maven-3.8.7\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="15.0.1+9-18"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="59.0"/>
  </properties>
  <testcase name="logicalAND" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.421">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalAND(BinaryControllerTest.java:146)
]]></failure>
    <system-out><![CDATA[2023-02-19 19:28:40.279  INFO 17776 --- [           main] .b.t.a.w.s.WebMvcTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.ontariotechu.sofe3980U.BinaryControllerTest], using SpringBootContextLoader
2023-02-19 19:28:40.279  INFO 17776 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.ontariotechu.sofe3980U.BinaryControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2023-02-19 19:28:40.279  INFO 17776 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.ontariotechu.sofe3980U.BinaryControllerTest]: BinaryControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-02-19 19:28:40.284  INFO 17776 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.ontariotechu.sofe3980U.Application for test class com.ontariotechu.sofe3980U.BinaryControllerTest
2023-02-19 19:28:40.284  INFO 17776 --- [           main] .b.t.a.w.s.WebMvcTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2023-02-19 19:28:40.284  INFO 17776 --- [           main] .b.t.a.w.s.WebMvcTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2da99821, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@62cba181, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1b482cbf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@661fe025, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7161457, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@38ee7a9d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@629984eb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7b1e5e55, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c1d59cd, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@76cf841]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.2.RELEASE)

2023-02-19 19:28:40.329  INFO 17776 --- [           main] c.o.sofe3980U.BinaryControllerTest       : Starting BinaryControllerTest on DESKTOP-UGJK2VN with PID 17776 (started by jean- in C:\Users\jean-\Documents\GitHub\ProjectDeliverable2\BinaryCalculatorWebapp)
2023-02-19 19:28:40.329  INFO 17776 --- [           main] c.o.sofe3980U.BinaryControllerTest       : No active profile set, falling back to default profiles: default
2023-02-19 19:28:40.719  INFO 17776 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2023-02-19 19:28:40.864  INFO 17776 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-02-19 19:28:40.864  INFO 17776 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-02-19 19:28:40.874  INFO 17776 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 10 ms
2023-02-19 19:28:40.899  INFO 17776 --- [           main] c.o.sofe3980U.BinaryControllerTest       : Started BinaryControllerTest in 0.61 seconds (JVM running for 4.118)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalOR2" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.06">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalOR2(BinaryControllerTest.java:106)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalOR3" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.079">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalOR3(BinaryControllerTest.java:116)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalOR4" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.151">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalOR4(BinaryControllerTest.java:126)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalOR5" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.19">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalOR5(BinaryControllerTest.java:136)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalOR" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.186">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalOR(BinaryControllerTest.java:96)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="getDefault" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0"/>
  <testcase name="multiply2" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.234">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.multiply2(BinaryControllerTest.java:206)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="multiply3" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.035">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.multiply3(BinaryControllerTest.java:216)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="multiply4" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.045">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.multiply4(BinaryControllerTest.java:226)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[multiply], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="multiply5" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.05">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.multiply5(BinaryControllerTest.java:236)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[multiply], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[multiply], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="missingOperands" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0"/>
  <testcase name="missingOperator" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0"/>
  <testcase name="logicalAND2" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.065">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalAND2(BinaryControllerTest.java:156)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[multiply], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[multiply], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[], operator=[+], operand2=[]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = result
             View = null
        Attribute = operand1
            value = 
        Attribute = operator
            value = +
        Attribute = operand2
            value = 
        Attribute = result
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p > + =0</p>
</h3>
<a href="/" >New operation</a>
<a href="/?operand1=0" >Continue calculation</a>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10100], operator=[], operand2=[11111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10100
        Attribute = operator
            value = 
        Attribute = operand2
            value = 11111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: (  )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[01010], operator=[logicalAND], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 01010
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalAND3" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.06">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalAND3(BinaryControllerTest.java:166)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[multiply], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[multiply], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[], operator=[+], operand2=[]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = result
             View = null
        Attribute = operand1
            value = 
        Attribute = operator
            value = +
        Attribute = operand2
            value = 
        Attribute = result
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p > + =0</p>
</h3>
<a href="/" >New operation</a>
<a href="/?operand1=0" >Continue calculation</a>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10100], operator=[], operand2=[11111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10100
        Attribute = operator
            value = 
        Attribute = operand2
            value = 11111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: (  )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[01010], operator=[logicalAND], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 01010
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[110], operator=[logicalAND], operand2=[110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 110
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalAND4" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.08">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalAND4(BinaryControllerTest.java:176)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[multiply], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[multiply], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[], operator=[+], operand2=[]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = result
             View = null
        Attribute = operand1
            value = 
        Attribute = operator
            value = +
        Attribute = operand2
            value = 
        Attribute = result
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p > + =0</p>
</h3>
<a href="/" >New operation</a>
<a href="/?operand1=0" >Continue calculation</a>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10100], operator=[], operand2=[11111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10100
        Attribute = operator
            value = 
        Attribute = operand2
            value = 11111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: (  )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[01010], operator=[logicalAND], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 01010
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[110], operator=[logicalAND], operand2=[110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 110
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[logicalAND], operand2=[11010]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 11010

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="logicalAND5" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.07">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.logicalAND5(BinaryControllerTest.java:186)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[multiply], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[multiply], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[], operator=[+], operand2=[]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = result
             View = null
        Attribute = operand1
            value = 
        Attribute = operator
            value = +
        Attribute = operand2
            value = 
        Attribute = result
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p > + =0</p>
</h3>
<a href="/" >New operation</a>
<a href="/?operand1=0" >Continue calculation</a>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10100], operator=[], operand2=[11111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10100
        Attribute = operator
            value = 
        Attribute = operand2
            value = 11111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: (  )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[01010], operator=[logicalAND], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 01010
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[110], operator=[logicalAND], operand2=[110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 110
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[logicalAND], operand2=[11010]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 11010

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalAND], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="multiply" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0.11">
    <failure message="View name expected:&lt;result&gt; but was:&lt;Error&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: View name expected:<result> but was:<Error>
	at com.ontariotechu.sofe3980U.BinaryControllerTest.multiply(BinaryControllerTest.java:196)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0111], operator=[logicalAND], operand2=[0111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0111
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1100], operator=[logicalOR], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1100
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10001], operator=[logicalOR], operand2=[10001]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10001
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 10001

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[101], operator=[logicalOR], operand2=[01101]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 101
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 01101

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalOR], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1011], operator=[logicalOR], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1011
        Attribute = operator
            value = logicalOR
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalOR )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.getCalculator(java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = calculator
             View = null
        Attribute = operand1
            value = 
        Attribute = operand1Focused
            value = false

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>

<head>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.js"
            integrity=
                    "sha512-BbVEDjbqdN3Eow8+empLMrJlxXRj5nEitiCAK5A1pUr66+jLVejo3PmjIaucRnjlB0P9R3rBUs3g5jXc8ti+fQ=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <script src=
                    "https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.6.4/math.min.js"
            integrity=
                    "sha512-iphNRh6dPbeuPGIrQbCdbBF/qcqadKWLa35YPVfMZMHBSI6PLJh1om2xCTWhpVpmUyb4IvVS9iYnnYMkleVXLA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    <!-- for styling -->
    <style>
        table {
            border: 1px solid black;
            margin-left: auto;
            margin-right: auto;
        }

        input[type="button"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }
		input[type="submit"] {
            width: 100%;
            padding: 20px 40px;
            background-color: green;
            color: white;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
        }

        input[type="text"] {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
		select {
            padding: 20px 30px;
            font-size: 24px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            border: 2px solid black;
        }
    </style>
</head>
<!-- create table -->

<body>
<form action="/" method="Post">
    <table id="calcu">
        <tr>
            <td colspan="2"><input type="text" id="operand1" name="operand1" value="" onfocus="focusFun(false)" readonly></td>
            <td colspan="1"> <select id="operator" name="operator"  >
                <option value="+">+</option>
                <option value="*">*</option>
                <option value="|">|</option>
                <option value="&">&</option>
                <option value=" " hidden selected="selected" > </option>
            </select></td>
            <td colspan="2"><input type="text" id="operand2" name="operand2" onfocus="focusFun(true)" readonly></td>

        </tr>
        <tr>
            <td colspan="1"><input type="button" value="0" onclick="dis('0')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="1" onclick="dis('1')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="sddsd" hidden></td>
            <td colspan="1"><input type="button" value="C" onclick="clr()"></td>
            <td colspan="1"><input type="button" value="CE" onclick="clrOne()"></td>
        </tr>
        <tr>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="+" onclick="oper('+')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="*" onclick="oper('*')"
                                   onkeydown="myFunction(event)"> </td>
        </tr>
        <tr>
            <td colspan="1"><input type="button" value="|" onclick="oper('|')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" value="&" onclick="oper('&')"
                                   onkeydown="myFunction(event)"> </td>
            <td colspan="1"><input type="button" hidden></td>
            <td><input type="submit" value="=" accesskey="="> </td>
        </tr>
    </table>
</form>
<script>
		var x = false;
	</script>
<script>
        // Function that display value
		function focusFun(val){
			x=val;
		}
        function dis(val) {
            if(x) {
				document.getElementById("operand2").value += val;
			}
			else {
				document.getElementById("operand1").value += val;
			}
        }
		function oper(val)
		{
			document.getElementById("operator").value = val;
			x=true;
		}
        function myFunction(event) {
            if (event.key == '0' || event.key == '1')
				if(x) {
					document.getElementById("operand2").value += event.key;
				}
				else {
					document.getElementById("operand1").value += event.key;
				}
        }

        var cal = document.getElementById("calcu");
        cal.onkeyup = function (event) {
            if (event.keyCode === 13) {
                console.log("Enter");
                let x = document.getElementById("result").value
                console.log(x);
                solve();
            }
        }

        // Function that evaluates the digit and return result
        function solve() {
            let x = document.getElementById("result").value
            let y = math.evaluate(x)
            document.getElementById("result").value = y
        }

        // Function that clear the display
        function clr() {
            if(x) {
				if( document.getElementById("operand2").value == "") {
					x=false;
					if(document.getElementById("operator").value == ""){
						document.getElementById("operand1").value = "";
					}
					else{
						document.getElementById("operator").value = "";
					}
				}
				else{
					document.getElementById("operand2").value = "";
				}
			}
			else {
				document.getElementById("operand1").value = "";
			}
        }
		function clrOne() {
            if(x) {
				str=document.getElementById("operand2").value;
				str=str.slice(0,-1);
				document.getElementById("operand2").value=str;
			}
			else {
				str=document.getElementById("operand1").value;
				str=str.slice(0,-1);
				document.getElementById("operand1").value=str;
			}
        }
    </script>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[001101], operator=[multiply], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 001101
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[1110], operator=[multiply], operand2=[1110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 1110
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[multiply], operand2=[1111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 1111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[multiply], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[], operator=[+], operand2=[]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = result
             View = null
        Attribute = operand1
            value = 
        Attribute = operator
            value = +
        Attribute = operand2
            value = 
        Attribute = result
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p > + =0</p>
</h3>
<a href="/" >New operation</a>
<a href="/?operand1=0" >Continue calculation</a>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10100], operator=[], operand2=[11111]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10100
        Attribute = operator
            value = 
        Attribute = operand2
            value = 11111

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: (  )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[01010], operator=[logicalAND], operand2=[0]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 01010
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[110], operator=[logicalAND], operand2=[110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 110
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[10], operator=[logicalAND], operand2=[11010]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 10
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 11010

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[0000], operator=[logicalAND], operand2=[0000]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 0000
        Attribute = operator
            value = logicalAND
        Attribute = operand2
            value = 0000

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( logicalAND )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /
       Parameters = {operand1=[100], operator=[multiply], operand2=[110]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.ontariotechu.sofe3980U.BinaryController
           Method = public java.lang.String com.ontariotechu.sofe3980U.BinaryController.result(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = Error
             View = null
        Attribute = operand1
            value = 100
        Attribute = operator
            value = multiply
        Attribute = operand2
            value = 110

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE HTML>
<html>
<head>
    <title>Getting Started: Serving Web Content</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<h3>
    <p >Invalid operator: ( multiply )</p>
</h3>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="postParameter" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0"/>
  <testcase name="noParameters" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0"/>
  <testcase name="getParameter" classname="com.ontariotechu.sofe3980U.BinaryControllerTest" time="0"/>
</testsuite>